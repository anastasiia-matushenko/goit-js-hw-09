{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,uBAoCzC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTV,EAAUW,UAAW,EAEnBP,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MA9CLN,EAAKe,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJd,EAAUW,UAAW,EAErBI,QAAQC,IAAIH,EAAII,cAAcC,UAC9B,IAAgCC,EAAAN,EAAII,cAAcC,SAA1CE,EAAwBD,EAAxBC,OAAQjB,EAAgBgB,EAAhBhB,MAAOkB,EAASF,EAATE,MAYzB,SAAsBC,GAEpB,I,IAFsBC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,QAASC,EAArBH,EAAqBG,UAEhCC,EAAW,EAAGA,GAAYD,EAAWC,GAAY,EAAG,CAG3DzB,EAAcyB,EAFCH,EAAWC,EAAUE,GAGjCC,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAAlC,GAASmC,OAAOC,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAEnE8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAAlC,GAASmC,OAAOI,QAAQ,oBAAmCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,YAfvEgC,CALiB,CACfZ,UAAWpB,EAAMiC,MACjBZ,SAAUH,EAAKe,MACfX,WAAYL,EAAOgB,QAIrBvB,EAAII,cAAcoB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nconst submitBtn = document.querySelector(\"button[type=submit]\");\n\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  submitBtn.disabled = true;\n\n  console.log(evt.currentTarget.elements);\n  const { amount, delay, step } = evt.currentTarget.elements;\n\n  const fieldVal = {\n    delayVal: +delay.value,\n    stepVal: +step.value,\n    amountVal: +amount.value,\n  }\n  updateValues(fieldVal);\n\n  evt.currentTarget.reset();\n};\n\nfunction updateValues({ delayVal, stepVal, amountVal }) {\n  // let newDelay;\n  for (let position = 1; position <= amountVal; position += 1) {\n    let newDelay = delayVal + stepVal * position;\n\n    createPromise(position, newDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      submitBtn.disabled = false;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n  })\n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","disabled","addEventListener","evt","preventDefault","console","log","currentTarget","elements","_elements","amount","step","param1","delayVal","stepVal","amountVal","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$updateValues","value","reset"],"version":3,"file":"03-promises.2cba3a11.js.map"}
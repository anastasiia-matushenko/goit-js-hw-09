{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACPN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MA1CQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBG,OAAQhB,EAAgBa,EAAhBb,MAAOiB,EAASJ,EAATI,MAYzB,SAAsBC,GACpB,I,IADsBC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,QAASC,EAArBH,EAAqBG,UAChCC,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EAAG,CAEtCxB,EAAcwB,EADCH,EAAWC,GAAWE,EAAI,IAEtCC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAoCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,UAEnE6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOI,QAAQ,oBAAmCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,YAbvE+B,CALkB,CAChBZ,SAAUa,OAAOhC,EAAMiC,OACvBb,QAASY,OAAOf,EAAKgB,OACrBZ,UAAWW,OAAOhB,EAAOiB,SAI3BtB,EAAIG,cAAcoB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { amount, delay, step } = evt.currentTarget.elements;\n\n  const fieldsVal = {\n    delayVal: Number(delay.value),\n    stepVal: Number(step.value),\n    amountVal: Number(amount.value),\n  }\n  updateValues(fieldsVal);\n\n  evt.currentTarget.reset();\n};\n\nfunction updateValues({ delayVal, stepVal, amountVal }) {\n  for (let i = 1; i <= amountVal; i += 1) {\n    let newDelay = delayVal + stepVal * (i - 1);\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n  })\n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","amount","step","param1","delayVal","stepVal","amountVal","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$updateValues","Number","value","reset"],"version":3,"file":"03-promises.c1fe840f.js.map"}
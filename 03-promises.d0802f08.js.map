{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACPN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MA1CQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,OAAEA,EAAMb,MAAEA,EAAKc,KAAEA,GAASH,EAAII,cAAcC,UAYpD,UAAsBC,SAAEA,EAAQC,QAAEA,EAAOC,UAAEA,IACzC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EAAG,CAEtCtB,EAAcsB,EADCH,EAAWC,GAAWE,EAAI,IAEtCC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAqBzB,QAAeC,UAE7DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,oBAAoB3B,QAAeC,YAbjE2B,CALkB,CAChBV,SAAUW,OAAO5B,EAAM6B,OACvBX,QAASU,OAAOd,EAAKe,OACrBV,UAAWS,OAAOf,EAAOgB,SAI3BlB,EAAII,cAAce","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { amount, delay, step } = evt.currentTarget.elements;\n\n  const fieldsVal = {\n    delayVal: Number(delay.value),\n    stepVal: Number(step.value),\n    amountVal: Number(amount.value),\n  }\n  updateValues(fieldsVal);\n\n  evt.currentTarget.reset();\n};\n\nfunction updateValues({ delayVal, stepVal, amountVal }) {\n  for (let i = 1; i <= amountVal; i += 1) {\n    let newDelay = delayVal + stepVal * (i - 1);\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n  })\n};\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","amount","step","currentTarget","elements","delayVal","stepVal","amountVal","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$updateValues","Number","value","reset"],"version":3,"file":"03-promises.d0802f08.js.map"}